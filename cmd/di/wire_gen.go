// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"poll.ant/internal/libs/db"
	"poll.ant/internal/libs/oauth"
	"poll.ant/internal/server"
	application2 "poll.ant/internal/services/auth/application"
	infrastructure2 "poll.ant/internal/services/auth/infrastructure"
	presentation2 "poll.ant/internal/services/auth/presentation"
	"poll.ant/internal/services/users/application"
	"poll.ant/internal/services/users/infrastructure"
	"poll.ant/internal/services/users/presentation"
)

// Injectors from wire.go:

func InitializeServer() (*server.Server, error) {
	healthCheckHandler := server.NewHandler()
	gormDB := db.InitDb()
	userRepository := infrastructure.New(gormDB)
	userService := application.NewUserService(userRepository, gormDB)
	userController := presentation.NewUserController(userService)
	refreshTokenRepository := infrastructure2.New(gormDB)
	oAuthProvider := oauth.NewOAuthProvider()
	authService := application2.NewAuthService(refreshTokenRepository, userRepository, oAuthProvider, gormDB)
	authController := presentation2.NewAuthController(authService)
	serverServer := server.NewServer(healthCheckHandler, userController, authController)
	return serverServer, nil
}
